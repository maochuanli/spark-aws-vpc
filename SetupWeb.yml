---

# playbook to set up the apache EC2 instance

# 1, Install Python
- name: Make sure Python is installed on target machine
  hosts: all
  gather_facts: false
  become: yes
  tasks:
  - name: Show current Domain Name given
    debug:
      var: domain_host_name

  - name: Install Python
    raw: sudo apt-get install -y python

# 2, Change the host name
- name: Change Hostname with the given Domain Name
  hosts: all
  gather_facts: false
  become: yes
  tasks:
  - name: Change host name of the EC2 instance
    shell: |
      echo "{{ domain_host_name }}" > /etc/hostname
    args:
      executable: /bin/bash

  - name: Change host name in /etc/hosts
    lineinfile:
      path: /etc/hosts
      line: '127.0.0.1 {{ domain_host_name }}'

  - name: Rebooting ...
    shell: sleep 3 && shutdown -r now
    async: 1
    poll: 0
    ignore_errors: true

  - name: Wait for system to become reachable again
    wait_for_connection:
      delay: 20
      timeout: 300

# 3, Install required system packages
- name: Install System packages
  hosts: all
  gather_facts: false
  become: yes
  tasks:
  - name: Install Apache and relevant packages
    shell: |
      apt-get update
      apt-get install -y apache2 apache2-bin apache2-data apache2-utils ssl-cert libapache2-mod-wsgi python-pip
      pip install Django
      a2enmod wsgi ssl
    args:
      executable: /bin/bash

# 4, Configure Apache and Upload Webapp
- name: Configure Apache with WSGi configuration
  hosts: all
  gather_facts: false
  become: yes
  tasks:
  - name: for wsgi.conf
    copy:
      src: "{{ playbook_dir }}/webapp/wsgi.conf"
      dest: /etc/apache2/conf-available/wsgi.conf
      owner: www-data
      group: www-data
      mode: 0644
    notify: restart apache

  - name: Change host name of the EC2 instance
    shell: |
      a2enconf wsgi
    args:
      executable: /bin/bash

  - name: copying python code and the html file
    copy:
      src: "{{ playbook_dir }}/webapp/{{item}}"
      dest: "/var/www/"
      owner: www-data
      group: www-data
      mode: 0644
    loop:
      - python
      - html

  handlers:
  - name: restart apache step 1
    systemd:
      name: apache2
      state: restarted
    listen: "restart apache"

#  - name: restart apache step 2
#    debug:
#      msg: "Please access the new web server @ https://{{domain_host_name}}"
#    listen: "restart apache"

# 5, Set up DNS record in godaddy.com
- name: Update DNS record for this EC2 instance
  hosts: all
  gather_facts: false
  tasks:
  - name: Show current host name
    debug:
      var: inventory_hostname

  - name: run curl command to update DNS record
    shell: |
      echo "IP is: {{inventory_hostname}}"
      curl -X PATCH https://api.godaddy.com/v1/domains/{{domain_host_name}}/records -H 'Authorization: sso-key {{go_daddy_key}}:{{go_daddy_secret}}' -H 'Content-Type: application/json' --data '[{"type": "A","name": "@","data": "{{inventory_hostname}}","ttl": 3600}]'
    args:
      executable: /bin/bash

  - name: run curl command to read DNS record data back
    shell: |
      curl -X GET https://api.godaddy.com/v1/domains/{{domain_host_name}}/records/A/@ -H 'Authorization: sso-key {{go_daddy_key}}:{{go_daddy_secret}}' -H 'Content-Type: application/json'
    args:
      executable: /bin/bash
    register: out

  - name: Show command output
    debug: var=out.stdout

  - name: Show command output
    debug:
      msg: "Successfully updated the DNS record"
    when:
      out.stdout is search(inventory_hostname)
  - name: Show failure message
    fail:
      msg: "The DNS record is NOT updated!!!"
    when: inventory_hostname not in out.stdout
